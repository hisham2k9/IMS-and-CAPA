# Generated by Django 3.0.3 on 2020-03-08 10:56

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import ims.models
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='closureimages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='investigationimages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='submissionimages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='transferimages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='validationimages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='imsmodel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pt_id', models.CharField(max_length=20)),
                ('pt_name', models.CharField(max_length=100)),
                ('pt_gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=50)),
                ('pt_age', models.IntegerField(blank=True, null=True)),
                ('datetime_creation', models.DateTimeField(default=datetime.datetime.now)),
                ('pt_room', models.CharField(max_length=100)),
                ('pt_department', models.CharField(max_length=100)),
                ('datetime_occurance', models.DateTimeField(default=datetime.datetime.now)),
                ('place_occurance', models.CharField(max_length=100)),
                ('anaesthesia_surgery', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Complications of Anaesthesia', 'Complications of Anaesthesia'), ('Intubation Related', 'Intubation related'), ('Accidental extubation', 'Accidental Extubation'), ('Wrong patient or wrong site-side', 'Wrong patient or wrong site-side'), ('Acute MI within 48 hours of surgery', 'Acute MI within 48 hours of surgery'), ('Sponge or Instrument or Needle left in situ', 'Sponge or Instrument or Needle left in situ'), ('Retained Foreign body removal', 'Retained foreign body removal'), ('Death in OT or within 48 hours of surgery ', 'Death in OT or within 48 hours of surgery')], max_length=300, null=True)),
                ('anaesthesia_surgery_others', models.CharField(blank=True, max_length=200, null=True)),
                ('communication_related', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Lab speciment improperly prepared/collected', 'Lab specimen improperly prepared'), ('Sample improperly labelled', 'Sample improperly labelled')], max_length=300, null=True)),
                ('communication_others', models.CharField(blank=True, max_length=200, null=True)),
                ('consent_related', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Consent not obtained or documented', 'Consent not obtained or documented'), ('Inadequete consent', 'Inadequete consent')], max_length=300, null=True)),
                ('consent_related_others', models.CharField(blank=True, max_length=200, null=True)),
                ('emergency_related', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Patient left against medical advice', 'Patient left against medical advice'), ('Reports and patients documents misplaced', 'Reports and patients documents misplaced')], max_length=300, null=True)),
                ('emergency_related_others', models.CharField(blank=True, max_length=200, null=True)),
                ('safety_falls_related', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Patient fall', 'Patient fall'), ('Self Inflicted injury', 'Self Inflicted injury'), ('Visitor Falls or Injury', 'Visitor Falls or Injury'), ('Assault on patient  or Staff', 'Assault on patient or Staff'), ('Needle stick Injury', 'Needle stick Injury'), ('Hazardous Material Spillage', 'Hazardous Material Spillage')], max_length=300, null=True)),
                ('safety_falls_related_others', models.CharField(blank=True, max_length=200, null=True)),
                ('diagnosis_related', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Management of care', 'Management of care'), ('Delay in starting treatment', 'Delay in starting treatment'), ('Patient not seen by Doctor', 'Patient not seen by Doctor'), ('Repeat blood sample withdrawal', 'Repeat blood sample withdrawal')], max_length=300, null=True)),
                ('diagnosis_related_others', models.CharField(blank=True, max_length=200, null=True)),
                ('transfusion_related', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Variance in use of blood and blood products', 'Variance in use of blood and blood products'), ('Transfusion stopped due to reaction', 'Transfusion stopped due to reaction')], max_length=300, null=True)),
                ('transfusion_related_others', models.CharField(blank=True, max_length=200, null=True)),
                ('equipment_related', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Equipment not available', 'Equipment not available'), ('Equipment malfunctioned', 'Equipment malfunctioned')], max_length=300, null=True)),
                ('equipment_related_others', models.CharField(blank=True, max_length=200, null=True)),
                ('medication_variance', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Prescription error', 'Prescription error'), ('Indenting error', 'Indenting error'), ('Dispensing error', 'Dispensing error'), ('Administration error (Violation of any of the rights)', 'Administration error (Violation of any of the rights)'), ('Drug given to patient with known allergy.', 'Drug given to patient with known allergy.')], max_length=300, null=True)),
                ('medication_variance_others', models.CharField(blank=True, max_length=200, null=True)),
                ('misc', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Security related', 'Security related'), ('Theft of personal property', 'Theft of personal property'), ('Infrastructure failure or collapse', 'Infrastrucure failure or collapse')], max_length=300, null=True)),
                ('misc_others', models.CharField(blank=True, max_length=200, null=True)),
                ('management_of_care', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Non availability of doctor on call', 'Non availability of doctor on call')], max_length=300, null=True)),
                ('management_of_care_others', models.CharField(blank=True, max_length=200, null=True)),
                ('contributing_factors', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Language Barrier', 'Language Barrier'), ('Hearing problems', 'Hearing problems'), ('Limited Vision', 'Limited Vision'), ('Obesity', 'Obesity'), ('Seizures', 'Seizures'), ('Intoxication', 'Intoxication'), ('Physical handicaps', 'Physical handicaps')], max_length=300, null=True)),
                ('contributing_factors_others', models.CharField(blank=True, max_length=200, null=True)),
                ('pt_condition', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Well Oriented', 'Well Oriented'), ('Confused', 'Confused'), ('Sedated', 'Sedated'), ('Drowsy', 'Drowsy'), ('Hyperactive', 'Hyperactive'), ('Uncooperative', 'Uncooperative'), ('Violent', 'Violent')], max_length=300, null=True)),
                ('pt_condition_others', models.CharField(blank=True, max_length=200, null=True)),
                ('action_taken', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Informed Consultant or HOD', 'Informed Consultant or HOD'), ('Event recorded in the file', 'Event recorded in the file'), ('Seen by attending physician', 'Seen by attending physician')], max_length=300, null=True)),
                ('action_taken_others', models.CharField(blank=True, max_length=200, null=True)),
                ('severity_score', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No harm or No treatment', 'No harm or No treatment'), ('Insignificant harm or minimal treatment', 'Insignificant harm or minimal treatment'), ('Significant Physical intervention/Residual effect possible', 'Significant Physical intervention/Residual effect possible'), ('Major or extensive intervention/Residual effect', 'Major or extensive intervention/Residual effect'), ('Major potentially life threatening disability or residual effects', 'Major potentially life threatening disability or residual effects'), ('Death Imminent or predictable', 'Death Imminent or predictable'), ('Resultant Death', 'Resultant Death')], max_length=300, null=True)),
                ('severity_score_others', models.CharField(blank=True, max_length=200, null=True)),
                ('narration', models.TextField(blank=True, null=True)),
                ('relevant_info', models.TextField(blank=True, null=True)),
                ('report_to', models.CharField(max_length=100)),
                ('submission_update_timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('submit_confirm_switch', models.BooleanField(default=False)),
                ('transfer_comments_qa', models.TextField(blank=True, null=True)),
                ('transfer_comments_qa_by', models.CharField(max_length=100)),
                ('transfer_qa_comments_update_timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('transfer_qa_comments_confirm_switch', models.BooleanField(default=False)),
                ('investigation_comments_hod', models.TextField(blank=True, null=True)),
                ('investigation_by', models.CharField(blank=True, max_length=100, null=True)),
                ('investigation_update_timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('investigation_confirm_switch', models.BooleanField(default=False)),
                ('validation_comments_qa', models.TextField(blank=True, null=True)),
                ('validation_qa_by', models.CharField(max_length=100)),
                ('validation_confirm_update_timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('validation_confirm_switch', models.BooleanField(default=False)),
                ('comments_cqo', models.TextField(blank=True, null=True)),
                ('closure_by', models.CharField(blank=True, max_length=100, null=True)),
                ('closure_update_timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('closure_confirm_switch', models.BooleanField(default=False)),
                ('closure_confirm_user', models.ForeignKey(default=6, on_delete=models.SET(ims.models.get_sentinel_user), related_name='closure_person', to=settings.AUTH_USER_MODEL)),
                ('investigation_user', models.ForeignKey(default=6, on_delete=models.SET(ims.models.get_sentinel_user), related_name='investigator', to=settings.AUTH_USER_MODEL)),
                ('pt_doctor', models.ForeignKey(default='Unknown', on_delete=django.db.models.deletion.SET_DEFAULT, to='accounts.Doctors')),
                ('qa_transfer_to', models.ForeignKey(default=6, on_delete=models.SET(ims.models.get_sentinel_user), related_name='transfer_to_user', to=settings.AUTH_USER_MODEL)),
                ('submission_confirm_user', models.ForeignKey(default=6, on_delete=models.SET(ims.models.get_sentinel_user), to=settings.AUTH_USER_MODEL)),
                ('transfer_qa_comments_user', models.ForeignKey(default=6, on_delete=models.SET(ims.models.get_sentinel_user), related_name='transfer_user', to=settings.AUTH_USER_MODEL)),
                ('validation_confirm_user', models.ForeignKey(default=6, on_delete=models.SET(ims.models.get_sentinel_user), related_name='validator', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
